// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TradingBot.Data;

#nullable disable

namespace TradingBot.Migrations
{
    [DbContext(typeof(TradingBotDbContext))]
    [Migration("20231102110513_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "asset_type", new[] { "bond", "currency", "etf", "future", "option", "share" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TradingBot.Data.Instrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ApiTradeAvailable")
                        .HasColumnType("boolean")
                        .HasColumnName("api_trade_available_flag");

                    b.Property<AssetType>("AssetType")
                        .HasColumnType("asset_type")
                        .HasColumnName("asset_type");

                    b.Property<string>("Figi")
                        .HasColumnType("text")
                        .HasColumnName("figi");

                    b.Property<DateTime?>("First1DayCandleDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("first1day_candle_date");

                    b.Property<DateTime?>("First1MinCandleDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("first1min_candle_date");

                    b.Property<bool>("ForQualInvestor")
                        .HasColumnType("boolean")
                        .HasColumnName("for_qual_investor_flag");

                    b.Property<int>("Lot")
                        .HasColumnType("integer")
                        .HasColumnName("lot");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("Otc")
                        .HasColumnType("boolean")
                        .HasColumnName("otc_flag");

                    b.Property<Guid>("Uid")
                        .HasColumnType("uuid")
                        .HasColumnName("uid");

                    b.HasKey("Id")
                        .HasName("pk_instrument");

                    b.ToTable("instrument", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
